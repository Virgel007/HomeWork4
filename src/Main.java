import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
//        task1();
//        task2();
//        task3();
        task4();

    }

    public static void task1() {
        //## 1 задача
        //Объявите три массива:
        //1. Целочисленный массив, заполненный тремя цифрами – 1, 2 и 3 – с помощью ключевого слова new.
        //    - Подсказка
        //        ```java
        //        //объявление массива из 12-ти элементов, заполненного нулями
        //        int [] weight = new int [12];
        //        ```
        //2. Массив, в котором можно хранить три дробных числа – 1.57, 7.654, 9.986 –  сразу заполнив его значениями.
        //    - Подсказка
        //        ```java
        //        //объявление целочисленного массива, заполненного 12 элементами
        //        int [] weight = {90, 91, 93, 92, 85, 87, 84, 83, 0, 0, 0, 0};
        //3. Произвольный массив – тип и количество данных определите сами. Самостоятельно выберите способ создания массива:
        //с помощью ключевого слова или сразу заполненный элементами.
        //```
        int[] massiveOne = new int[12];
        massiveOne[0] = 1;
        massiveOne[1] = 2;
        massiveOne[2] = 3;

        float[] masiveTwo = {1.57f, 7.654f, 9.986f};

        boolean[] massivethree = new boolean[5];
    }

    public static void task2() {

        // ## 2 задача
        //Пройдите по каждому из трех массивов и распечатайте все элементы всех трех массивов, начиная с первого элемента, через запятую.
        // Запятая между последним элементом одного массива и первым элементом следующего не нужна.
        //- **Критерии оценки**
        //    - В консоль выведены все элементы первого массива в верном порядке через запятую
        //    - В консоль выведены все элементы второго массива в верном порядке через запятую
        //    - В консоль выведены все элементы третьего массива в верном порядке через запятую
        //    - На одной строчке расположены элементы только одного массива
        int[] massiveOne = new int[12];
        massiveOne[0] = 1;
        massiveOne[1] = 2;
        massiveOne[2] = 3;
        System.out.println(massiveOne[0] + ", " + massiveOne[1] + ", " + massiveOne[2]);

        float[] masiveTwo = {1.57f, 7.654f, 9.986f};
        System.out.println(masiveTwo[0] + ", " + masiveTwo[1] + ", " + masiveTwo[2]);

        boolean[] massivethree = new boolean[5];
        massivethree[0] = true;
        massivethree[3] = false;
        System.out.println(massivethree[0] + ", " + massivethree[1] + ", " + massivethree[2]);
    }

    public static void task3() {
        //## 3 задача
        //Теперь ваша задача – распечатать все элементы всех трех массивов, но начинать нужно не с первого элемента массива, а с последнего. Элементы должны быть распечатаны через запятую,
        //при этом элементы одного массива располагаются на одной строчке, а элементы другого массива – на другой.
        //Запятая между последним элементом одного массива и первым элементом следующего не нужна.
        //Если во втором задании в консоль у вас вывелся результат
        //1, 2, 3
        //1.57, 7.654, 9.986
        //*произвольные элементы третьего массива*
        //То в третьем задании результат должен быть
        //3, 2, 1
        //9.986, 7.654, 1.57
        //*произвольные элементы третьего массива в обратном порядке*
        int[] massiveOne = new int[12];
        massiveOne[0] = 1;
        massiveOne[1] = 2;
        massiveOne[2] = 3;
        int a = massiveOne[0];
        int b = massiveOne[1];
        int c = massiveOne[2];
        System.out.println(c + " ," + b + " ," + a);

        float[] masiveTwo = {1.57f, 7.654f, 9.986f};
        float aTwo = masiveTwo[0];
        float bTwo = masiveTwo[1];
        float cTwo = masiveTwo[2];
        System.out.println(masiveTwo[2] + ", " + masiveTwo[1] + ", " + masiveTwo[0]);


        boolean[] massivethree = new boolean[5];
        massivethree[0] = true;
        massivethree[3] = false;
        System.out.println(massivethree[2] + ", " + massivethree[1] + ", " + massivethree[0]);

    }

    public static void task4() {

        //### 4 задача (Не решенно)
        //Пройдитесь по первому целочисленному массиву и все нечетные числа в нем сделайте четными (нужно прибавить 1).
        //Важно: код должен работать с любым целочисленным массивом, поэтому для решения задания вам нужно использовать циклы.
        //Распечатайте результат преобразования в консоль.
//        int[] massiveOne = {16, 4, 8};
        //k=2m – где k – четное число, m – любое целое число.
//        int m = massiveOne[0];
//        int k = 2;
//        int a = (m / k);
//        int z = a % 2;
//        if (z != 0){
//
//            System.out.println(z + " ");
//        }


//        for (int i = 0; i < massiveOne.length; i++) {
//                System.out.print(massiveOne[i] + 1 + " ");
//        }

    }
}

