public class Main {
    public static void main(String[] args) {
        task1();
//        task2();
//        task3();
//        task4();
//        task5();
//        task6();
//        task7();
//        task8();
//        task9();
//        task10();

    }

    public static void task1() {
        //## 1 задача
        //Объявите три массива:
        //1. Целочисленный массив, заполненный тремя цифрами – 1, 2 и 3 – с помощью ключевого слова new.
        //    - Подсказка
        //        ```java
        //        //объявление массива из 12-ти элементов, заполненного нулями
        //        int [] weight = new int [12];
        //        ```
        //2. Массив, в котором можно хранить три дробных числа – 1.57, 7.654, 9.986 –  сразу заполнив его значениями.
        //    - Подсказка
        //        ```java
        //        //объявление целочисленного массива, заполненного 12 элементами
        //        int [] weight = {90, 91, 93, 92, 85, 87, 84, 83, 0, 0, 0, 0};
        //        ```
        //3. Произвольный массив – тип и количество данных определите сами. Самостоятельно выберите способ создания массива:
        //с помощью ключевого слова или сразу заполненный элементами.
        //
        // ## 2 задача
        //Пройдите по каждому из трех массивов и распечатайте все элементы всех трех массивов, начиная с первого элемента, через запятую.
        // Запятая между последним элементом одного массива и первым элементом следующего не нужна.
        //- **Критерии оценки**
        //    - В консоль выведены все элементы первого массива в верном порядке через запятую
        //    - В консоль выведены все элементы второго массива в верном порядке через запятую
        //    - В консоль выведены все элементы третьего массива в верном порядке через запятую
        //    - На одной строчке расположены элементы только одного массива
        //## 3 задача
        //Теперь ваша задача – распечатать все элементы всех трех массивов, но начинать нужно не с первого элемента массива, а с последнего. Элементы должны быть распечатаны через запятую,
        //при этом элементы одного массива располагаются на одной строчке, а элементы другого массива – на другой.
        //Запятая между последним элементом одного массива и первым элементом следующего не нужна.
        //Если во втором задании в консоль у вас вывелся результат
        //1, 2, 3
        //1.57, 7.654, 9.986
        //*произвольные элементы третьего массива*
        //То в третьем задании результат должен быть
        //3, 2, 1
        //9.986, 7.654, 1.57
        //*произвольные элементы третьего массива в обратном порядке*

        //### 4 задача
        //Пройдитесь по первому целочисленному массиву и все нечетные числа в нем сделайте четными (нужно прибавить 1).
        //Важно: код должен работать с любым целочисленным массивом, поэтому для решения задания вам нужно использовать циклы.
        //Распечатайте результат преобразования в консоль.
        float[] number = new float[3];
        number[0] = 1.57f;
        number[1] = 7.654f;
        number[2] = 9.986f;
        System.out.println(number[0] + " " + number[1] + " " + number[2]);
        for (int i = 0; i < number.length; i++) {
            System.out.print((number[i] + 1) + " ");
        }
        System.out.println();

        int[] numberA = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        for (int i = 0; i < 9; i++) {
            System.out.print(numberA[i] + ", ");
        }
        System.out.print(numberA[9] + " ");
        System.out.println();

        int[] massiv3 = {10, 3, 4, 8};
        for (int l = 0; l < massiv3.length; l++) {
            System.out.print(massiv3[l] + " ");
        }
        System.out.println();
        System.out.println(number[2] + ", " + number[1] + ", " + number[0]);

        int[] numberB = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};
        for (int i = 0; i < 9; i++) {
            System.out.print(numberB[i] + ", ");
        }
        System.out.print(numberB[9] + " ");
        System.out.println();

        int[] massiv3a = {8, 4, 3, 10};
        for (int l = 0; l < massiv3a.length; l++) {
            System.out.print(massiv3a[l] + " ");
        }
    }

    public static void task2() {

    }


    public static void task3() {

    }
}
